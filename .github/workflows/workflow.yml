name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.0

    - name: Install dependent libraries
      run: sudo apt-get install libpq-dev

    - name: Cache Ruby gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Install dependencies
      run: |
        gem install bundler
        bundle config set path 'vendor/bundle'
        bundle install --jobs 4 --retry 3

    - name: Setup Database
      run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rake db:create
          bundle exec rake db:schema:load
      env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    - name: Rubocop
      run: bundle exec rubocop

    - name: Run RSpec
      run: COVERAGE=true bundle exec rspec  --require rails_helper
      env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    - name: Deploy to Heroku
      if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        git remote add heroku https://git.heroku.com/tranquil-stream-66380.git
        git push -f heroku main